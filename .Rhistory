library(performance)
check_heteroscedasticity(aov1)
check_normality(aov1)
library(DHARMa)
hist (aov1$residuals)
qqnorm(aov1$residuals)
qqline(aov1$residuals)
plot(simulateResiduals(aov1))
shapiro.test(aov1$residuals)
insects <- tibble::as_tibble(InsectSprays) |>
dplyr::select(spray, count)
insects
insects |>
ggplot(aes(spray, count))+
geom_boxplot(fill="orange")
aov2 <- aov(count ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
aov2 <- aov(sqrt(count) ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
kruskal.test(count ~ spray, data = insects)
library(agricolae)
kruskal(insects$count, insects$spray,
console = TRUE)
aov2 <- aov(count ~ spray, data = insects)
summary(aov2)
check_normality(aov2)
check_heteroscedasticity(aov2)
library(emmeans)
aov2_means <- emmeans(aov2, ~ spray,
type = "response")
aov2_means
pwpm(aov2_means)
library(multcomp)
library(multcompView)
cld(aov2_means)
glm1 <- glm(count ~spray,
data = insects,
family = poisson(link = "identity"))
plot(simulateResiduals(glm1))
summary(glm1)
glm1_means <- emmeans(glm1, ~ spray)
cld(glm1_means)
library(tidyverse)
library(readxl)
dat <- read_excel("dados-diversos.xlsx", "fungicida_vaso")
dat2 <- dat |>
mutate(inc = dis_sp / n_sp*100)
dat2 |>
ggplot(aes(x = treat,
y = inc))+
geom_jitter(width = 0.1)+
facet_wrap(~dose)
m1 <- aov(inc ~treat*dose,
dat = dat2)
summary(m1)
library(performance)
check_normality(m1)
check_heteroscedasticity(m1)
library(DHARMa)
plot(simulateResiduals(m1))
m1 <- aov(log(inc + 0.5) ~ treat*dose,
dat = dat2)
summary(m1)
check_normality(m1)
check_heteroscedasticity(m1)
plot(simulateResiduals(m1))
library(emmeans)
means_m1 <- emmeans(m1, ~ treat | dose,
type = "response")
means_m1
library(multcompView)
library(multcomp)
cld(means_m1)
library(agricolae)
cv.model(m1)
library(googlesheets4)
library(gsheet)
library(ggplot2)
url <- "https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1507017964#gid=1507017964"
milho <- gsheet2tbl(url)
head(milho)
milho |>
filter(tempo ==8) |>
ggplot(aes(factor(tipo), peso_mil,
color = factor(umidade)))+
geom_jitter(width = 0.1)+
facet_wrap(~ umidade)
milho2 <- milho |>
filter(tempo ==8)
m2 <- aov(peso_mil ~ factor(tipo)*factor(umidade),
data = milho2)
summary(m2)
milho3 <- read_excel("dados-diversos.xlsx", "milho")
m4 <- aov(yield ~hybrid*method,
data = milho3)
summary(m4)
check_heteroscedasticity(m4)
plot(simulateResiduals(m4))
medias_m4 <- emmeans(m4, ~ hybrid)
medias_m4
cld(medias_m4)
m5 <- aov(yield ~hybrid, data = milho3)
summary(m5)
m4 <- aov(yield ~hybrid,
data = milho3)
summary(m5)
check_heteroscedasticity(m5)
plot(simulateResiduals(m5))
medias_m5 <- emmeans(m5, ~hybrid)
medias_m5
cld(medias_m5)
pwpm(medias_m5)
fung <- read_excel("dados-diversos.xlsx", "fungicida_vaso")
fung2 <- fung |>
mutate(inc = inf_seeds/n_seeds*100,
rank_inc = rank(inc))
rank_anova <- aov(rank_inc ~treat*dose, data = fung2)
summary(rank_anova)
means_rank <- emmeans(rank_anova, ~treat | dose)
cld(means_rank)
library(tidyverse)
library(readxl)
fungicidas <- read_excel("dados-diversos.xlsx", "fungicida_campo")
names(fungicidas)
aov_fung <- aov(PROD ~ TRAT + BLOCO, data = fungicidas)
summary(aov_fung)
library(performance)
library(DHARMa)
check_normality(aov_fung)
check_heteroscedasticity(aov_fung)
plot(simulateResiduals(aov_fung))
library(emmeans)
means_fung <- emmeans(aov_fung, ~TRAT)
library(multcomp)
library(multcompView)
cld(means_fung)
plot(means_fung)+
coord_flip()+
theme_minimal()
milho <- read_excel("dados-diversos.xlsx", "milho")
#modelo
aov_milho_bloco <- aov(index ~ factor(block) + hybrid*method +
Error(factor(block)/hybrid/method), data = milho)
summary(aov_milho_bloco)
# Atribui o dataset Orange ao objeto "dados"
dados <- Orange
# Visualiza o conteúdo do dataset
head(dados)
# Arquivo de dados
#          Variedades
#Rep      A   B   C   D
# 1      25  31  22  33
# 2      26  25  26  29
# 3      20  28  28  31
# 4      23  27  25  34
# 5      21  24  29  28
#a1) Arquivo com poucos dados
trat <- c("A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D")
trat <- rep(c("A","B","C","D"),each=5) # mesmo comando que o escrito acima
repet<-rep(1:5, rep(4))
prod <- c(25, 26, 20, 23, 21, 31, 25, 28, 27, 24, 22, 26, 28, 25, 29, 33, 29, 31, 34, 28)
dados <- data.frame(trat,repet, prod)
dados
#2)Leitura de um arquivo salvo em txt
#digitar os dados no excel e colar em um editor de texto (bloco de notas)
#salvar o arquivo como .txt (por exemplo: mydata.txt)
#mudar para o diretorio onde se encontra o arquivo salvo
dados<-read.table("mydata.txt",head=TRUE)
# Atribui o dataset Orange ao objeto "dados"
dados <- Orange
# Visualiza o conteúdo do dataset
head(dados)
# Arquivo de dados
#          Variedades
#Rep      A   B   C   D
# 1      25  31  22  33
# 2      26  25  26  29
# 3      20  28  28  31
# 4      23  27  25  34
# 5      21  24  29  28
#a1) Arquivo com poucos dados
trat <- c("A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D")
trat <- rep(c("A","B","C","D"),each=5) # mesmo comando que o escrito acima
repet<-rep(1:5, rep(4))
prod <- c(25, 26, 20, 23, 21, 31, 25, 28, 27, 24, 22, 26, 28, 25, 29, 33, 29, 31, 34, 28)
dados <- data.frame(trat,repet, prod)
dados
#2)Leitura de um arquivo salvo em txt
#digitar os dados no excel e colar em um editor de texto (bloco de notas)
#salvar o arquivo como .txt (por exemplo: mydata.txt)
#mudar para o diretorio onde se encontra o arquivo salvo
#dados<-read.table("mydata.txt",head=TRUE)
#dados
#dados<-read.table(file.choose(),head=TRUE)
# Gera um gráfico simples da variável circumference
graph <- plot(dados$circumference)
# Atribui o dataset Orange ao objeto "dados"
dados <- Orange
# Visualiza o conteúdo do dataset
head(dados)
# Arquivo de dados
#          Variedades
#Rep      A   B   C   D
# 1      25  31  22  33
# 2      26  25  26  29
# 3      20  28  28  31
# 4      23  27  25  34
# 5      21  24  29  28
#a1) Arquivo com poucos dados
trat <- c("A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D")
trat <- rep(c("A","B","C","D"),each=5) # mesmo comando que o escrito acima
repet<-rep(1:5, rep(4))
prod <- c(25, 26, 20, 23, 21, 31, 25, 28, 27, 24, 22, 26, 28, 25, 29, 33, 29, 31, 34, 28)
dados <- data.frame(trat,repet, prod)
dados
#2)Leitura de um arquivo salvo em txt
#digitar os dados no excel e colar em um editor de texto (bloco de notas)
#salvar o arquivo como .txt (por exemplo: mydata.txt)
#mudar para o diretorio onde se encontra o arquivo salvo
#dados<-read.table("mydata.txt",head=TRUE)
#dados
#dados<-read.table(file.choose(),head=TRUE)
# Gera um gráfico simples da variável circumference
graph <- plot(dados$circumference)
# Gera um gráfico simples da variável circumference
graph <- plot(dados$circumference)
dados
dados
# Atribui o dataset Orange ao objeto "dados"
dados <- Orange
# Visualiza o conteúdo do dataset
head(dados)
# Arquivo de dados
#          Variedades
#Rep      A   B   C   D
# 1      25  31  22  33
# 2      26  25  26  29
# 3      20  28  28  31
# 4      23  27  25  34
# 5      21  24  29  28
#a1) Arquivo com poucos dados
trat <- c("A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D")
trat <- rep(c("A","B","C","D"),each=5) # mesmo comando que o escrito acima
repet<-rep(1:5, rep(4))
prod <- c(25, 26, 20, 23, 21, 31, 25, 28, 27, 24, 22, 26, 28, 25, 29, 33, 29, 31, 34, 28)
dados <- data.frame(trat,repet, prod)
dados
#2)Leitura de um arquivo salvo em txt
#digitar os dados no excel e colar em um editor de texto (bloco de notas)
#salvar o arquivo como .txt (por exemplo: mydata.txt)
#mudar para o diretorio onde se encontra o arquivo salvo
dados<-read.table("mydata.txt",head=TRUE)
library(tidyverse)
library(readxl)
fungicida_campo <- read_excel("dados-diversos.xlsx",
"fungicida_campo")
#names(fungicida_campo) # para verificar os nomes das colunas do seu dataframe
fungicida_campo |>
ggplot(aes(x = TRAT, y = PROD)) +
geom_jitter(width = 0.1, color = "gray60") +
stat_summary(fun = mean, geom = "point", color = "blue", size = 3)
#install.packages("Hmisc") #pacote Hmisc (que define mean_se)
#library(Hmisc) ## para mean_se
fungicida_campo |>
ggplot(aes(x = TRAT, y = PROD)) +
geom_jitter(width = 0.1, color = "gray60") +
stat_summary(fun.data = mean_se, color = "blue")
library(ggthemes)
fungicida_campo$TRAT <- as.factor(fungicida_campo$TRAT)  # garantir que TRAT seja fator
fungicida_campo |>
ggplot(aes(x = TRAT, y = PROD, color = TRAT)) +
geom_point(size = 3) +
scale_color_colorblind() +
theme_minimal()
fungicida_campo |>
ggplot(aes(x = TRAT, y = PROD)) +
geom_point(size = 3, color = "steelblue") +
geom_smooth(method = "lm",
se = FALSE,
color = "black",
linetype = "solid",
size = 2) +
theme_minimal() +
labs(title = "Relação entre Tratamentpo e Produtividade",
x = "Tratamento",
y = "Produtividade")
milho <- read_excel("dados-diversos.xlsx", "milho")
milho |>
ggplot(aes(hybrid, yield, color = method))+
scale_color_brewer(palette = "Dark2")+
geom_jitter(size = 2)+
facet_wrap(~hybrid)
milho |>
ggplot(aes(method, index, color = method))+
scale_color_brewer(palette = "Dark2")+
geom_jitter(size = 2)+
facet_wrap(~hybrid)
p_yield <- milho |>
ggplot(aes(x = yield))+
geom_histogram(bins = 10, color = "black", fill = "blue")
#Mudando de yield para index:
p_index <- milho |>
ggplot(aes(x = index))+
geom_histogram(bins = 10, color = "black", fill = "orange")
#Combinando gráficos com patchowork: deve-se primeiro definir um nome para cada gráfico
library(patchwork)
(p_yield + p_index)+
plot_annotation(tag_levels = "A")
ggsave("figs/histograms.png", bg = "white")
milho |>
ggplot(aes(x = index))+
geom_density()
insect <- read_excel("dados-diversos.xlsx", "mortalidade")
insect |>
pivot_longer(2:3,
names_to = "status",
values_to = "value") |>
ggplot(aes(inseticida, value, fill = status))+
geom_col()
install.packages("metafor")
#install.packages("ggplot2")
##Instalar múltiplos pacotes
#install.packages(c("dplyr", "readxl", "tidyverse", "GWalkR", "tidyr", "readr", "caret"))
library(tidyverse)
library(metafor)
library(gsheet)
library(remotes)
library(ggplot2)
library(dplyr)
{warning(FALSE)}
{library(dplyr)}
arrange(mtcars, cyl)
install.packages('tinytex')
tinytex::install_tinytex()  # instalar o TinyTeX
#install.packages("ggplot2")
##Instalar múltiplos pacotes
#install.packages(c("dplyr", "readxl", "tidyverse", "GWalkR", "tidyr", "readr", "caret"))
library(tidyverse)
library(metafor)
library(gsheet)
library(remotes)
library(ggplot2)
library(dplyr)
{warning(FALSE)}
{library(dplyr)}
arrange(mtcars, cyl)
#install.packages('tinytex')
#tinytex::install_tinytex()  # instalar o TinyTeX
estande = read_xlsx("dados-diversos.xlsx", sheet = "estande")
estande
library(tidyverse)
library(readxl)
library(ggplot2)
estande = read_xlsx("dados-diversos.xlsx", sheet = "estande")
estande |>
ggplot(aes(trat, nplants))+
geom_point()+
facet_wrap(~ exp)+
ylim(0,max(estande$nplants))+
geom_smooth(se =  F)
estande2 <- estande |>
filter(exp ==2) |>
group_by(trat) |>
summarise(mean_nplants = mean(nplants))
estande2|>
ggplot(aes(trat, mean_nplants))+
geom_point()+
#geom_line()
geom_smooth(formula = y ~ poly(x, 2), method = "lm", color = "blue")+
annotate(geom = "text",
x = 25, y = 70,
label = "y = 66.3 - 1.777x + 0.0222x2
R2 = 0.0.88")
estande2 <- estande2 |>
mutate(trat2 = trat^2)
m1 <- lm(mean_nplants ~ trat, data = estande2)
summary(m1)
hist(m1$residuals,
main = "Histograma dos Resíduos",
xlab = "Resíduos",
col = "pink",
border = "white")
m2 <- lm(mean_nplants ~ trat + trat2,
data = estande2)
summary(m2)
AIC(m1, m2)
url <- "https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=413008764#gid=413008764"
mofo <- gsheet2tbl(url)
head(mofo)
mofo |>
ggplot(aes(inc, yld))+
geom_point()+
geom_smooth(se = F, method = "lm")+
facet_wrap(~ study)
mofo1 <- mofo |>
filter(study ==1)
mofo1
cor.test(mofo1$inc, mofo1$yld)
mofo1 <- mofo |>
filter(study ==2)
mofo1
cor.test(mofo1$inc, mofo1$yld)
mofo1 <- mofo |>
filter(study ==3)
mofo1
cor.test(mofo1$inc, mofo1$yld)
mofo1 <- mofo |>
filter(study ==4)
mofo1
mofo1 <- mofo |>
filter(study ==3)
mofo1
mofo1 <- mofo |>
filter(study ==3)
mofo1
shapiro.test(mofo1$inc)
shapiro.test(mofo1$yld)
cor.test(mofo1$inc, mofo1$yld, method = "spearman")
library(dplyr)
pcor <- mofo1 |> dplyr::select(3:5) |> cor(method = "spearman")
library(corrplot)
corrplot(pcor, method = 'number', type = "lower")
library(tidyverse)
library(readxl)
library(ggplot2)
estande = read_xlsx("dados-diversos.xlsx", sheet = "estande")
estande |>
ggplot(aes(trat, nplants))+
geom_point()+
facet_wrap(~ exp)+
ylim(0,max(estande$nplants))+
geom_smooth(se =  F)
estande2 <- estande |>
filter(exp ==2) |>
group_by(trat) |>
summarise(mean_nplants = mean(nplants))
estande2|>
ggplot(aes(trat, mean_nplants))+
geom_point()+
#geom_line()
geom_smooth(formula = y ~ poly(x, 2), method = "lm", color = "blue")+
annotate(geom = "text",
x = 25, y = 70,
label = "y = 66.3 - 1.777x + 0.0222x2
R2 = 0.0.88")
estande2 <- estande2 |>
mutate(trat2 = trat^2)
m1 <- lm(mean_nplants ~ trat, data = estande2)
summary(m1)
hist(m1$residuals,
main = "Histograma dos Resíduos",
xlab = "Resíduos",
col = "pink",
border = "white")
m2 <- lm(mean_nplants ~ trat + trat2,
data = estande2)
summary(m2)
AIC(m1, m2)
url <- "https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=413008764#gid=413008764"
mofo <- gsheet2tbl(url)
head(mofo)
mofo |>
ggplot(aes(inc, yld))+
geom_point()+
geom_smooth(se = F, method = "lm")+
facet_wrap(~ study)
mofo1 <- mofo |>
filter(study ==1)
mofo1
cor.test(mofo1$inc, mofo1$yld)
mofo1 <- mofo |>
filter(study ==2)
mofo1
cor.test(mofo1$inc, mofo1$yld)
mofo1 <- mofo |>
filter(study ==3)
mofo1
cor.test(mofo1$inc, mofo1$yld)
mofo1 <- mofo |>
filter(study ==4)
mofo1
mofo1 <- mofo |>
filter(study ==3)
mofo1
mofo1 <- mofo |>
filter(study ==3)
mofo1
shapiro.test(mofo1$inc)
shapiro.test(mofo1$yld)
cor.test(mofo1$inc, mofo1$yld, method = "spearman")
library(dplyr)
pcor <- mofo1 |> dplyr::select(3:5) |> cor(method = "spearman")
library(corrplot)
corrplot(pcor, method = 'number', type = "lower")
library(gsheet)
mofo <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=413008764#gid=413008764")
head(mofo)
mofo |>
ggplot(aes(inc, yld))+
geom_point()+
geom_smooth(se = F, method = "lm")+
facet_wrap(~ study)
library(tidyverse)
library(readr)
# Leia a planilha (por padrão lê a primeira aba ou use sheet= para especificar)
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
# Por nome da aba
mg <- read_sheet(url, sheet = "magnesio")
