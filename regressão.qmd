---
title: "REGRESSÃO"
author: "MARIA IZABEL"
format: html
editor: visual
---

# **Análise de Regressão**

### Dados quantitativos e análise de regressão

Quando trabalhamos com dados quantitativos, a análise de regressão geralmente se mostra mais adequada do que a análise de variância (ANOVA). Isso ocorre porque a regressão permite modelar e prever a relação entre uma variável dependente (Y) e uma ou mais variáveis independentes (X). O objetivo é estimar os parâmetros de uma equação que descreve essa relação funcional, possibilitando compreender não apenas a direção e a intensidade do efeito das variáveis independentes sobre a dependente, mas também fazer previsões para valores que ainda não foram observados.

### Regressão linear simples

Na regressão linear simples, presume-se que a relação entre a variável dependente e a variável independente seja linear, isto é, possa ser representada por uma reta. A equação que define essa relação é dada por:\
y=β0​+β1​x+ε,\
onde y é a variável dependente (resposta), x é a variável independente (fator ou tratamento), β00​ é o intercepto da reta, β11​ é o coeficiente angular (inclinação), e ε representa o termo de erro aleatório.

O principal objetivo na regressão linear simples é testar se a inclinação da reta, β1 ​, é significativamente diferente de zero. Em outras palavras, verifica-se se existe uma relação estatisticamente significativa entre as variáveis, indicando que a variável independente influencia a variável dependente.

VAMOS LÁ!

```{r}
library(tidyverse)
library(gsheet)
library(ggplot2)

url <- "https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=401662555#gid=401662555"

estande <- gsheet2tbl(url)

estande |>
  ggplot(aes(trat, nplants))+
  geom_point()+
  facet_wrap(~ exp)+
  geom_smooth(se =  F, method = "lm")
```

### Modelo de melhor ajuste

Após a coleta dos dados, é importante identificar o modelo que melhor se adapta às observações. Para isso, pode-se realizar a análise de regressão separadamente para cada experimento, analisando-os individualmente, ou então aplicar modelos mistos que considerem os dados agrupados.

### Análise isolada por experimento

Para analisar cada experimento de forma isolada, inicialmente cria-se um novo objeto com o conjunto completo de dados (por exemplo, `exp1`). Em seguida, deve-se filtrar esse objeto para selecionar apenas os dados do experimento de interesse, criando um novo subconjunto. Esse procedimento facilita a aplicação da análise de regressão específica para aquele conjunto, permitindo avaliar o ajuste do modelo para cada experimento individualmente.

1-

```{r}
exp1 <- estande |>
  filter(exp == 1)

m1 <- lm(nplants ~trat, data = exp1)
summary(m1)
```

2-

```{r}
exp2 <- estande |>
  filter(exp == 2)

m2 <- lm(nplants ~trat, data = exp2)
summary(m2)
```

3-

```{r}
exp3 <- estande |>
  filter(exp == 3)

m3 <- lm(nplants ~trat, data = exp3)
summary(m3)
```

```{r}
library(report)
report(m3)
```

Gráfico com os 3 expeimentos:

```{r}
g1 <- exp1 |>
  ggplot(aes(trat, nplants))+
  geom_point()+
  geom_smooth(method = "lm", se = F)+
  annotate(geom = "text", x = 24,
           y = 70, label = "y = 52.5 - 0.24x")

g2 <- exp2 |>
  ggplot(aes(trat, nplants))+
  geom_point()+
  geom_smooth(method = "lm", se = F)+
  annotate(geom = "text", x = 24,
           y = 70, label = "y = 60 - 0.07x")
g3 <- exp3 |>
  ggplot(aes(trat, nplants))+
  geom_point()+
  geom_smooth(method = "lm", se = F)+
  annotate(geom = "text", x = 24,
           y = 70, label = "y = 95 - 0.07x")

library(patchwork)
g1|g2|g3
```

### Modelo misto

Em um modelo misto, os dados são organizados em grupos ou subgrupos, permitindo que cada grupo apresente efeitos aleatórios e/ou fixos distintos, conforme a estrutura dos dados. Por exemplo, quando as observações são coletadas em diferentes locais geográficos, é comum modelar um efeito aleatório para cada local, como acontece no conjunto de dados `estande`. Dessa forma, o modelo misto consegue capturar a variação intra e intergrupos, oferecendo uma análise mais robusta quando há dependência ou heterogeneidade entre os grupos.

```{r}
library(lme4)
mix <- lmer(nplants ~trat + (trat | exp),
            data = estande)
summary(mix)
```

```{r}
library(car)
Anova(mix)
```

No modelo misto, todos os experimentos são analisados em conjunto, assumindo que as amostras são aleatórias e pertencem a uma população maior. Para realizar a regressão em grupo (modelo misto), adiciona-se o argumento `group = exp` dentro da função `aes()` (estética), o que permite diferenciar os experimentos e ajustar o modelo considerando essa estrutura agrupada.

```{r}

estande |>
  ggplot(aes(trat, nplants, group = exp))+
  geom_point()+
  #facet_wrap(~ exp)+
  geom_smooth(se =  F, method = "lm")
```

De modo geral, modelos mistos apresentam maior capacidade do que abordagens que analisam cada experimento separadamente, pois consideram simultaneamente a variabilidade entre os diferentes experimentos e a variabilidade interna a cada um deles. Além disso, esses modelos permitem a análise integrada de todo o conjunto de dados, preservando informações importantes sobre a estrutura hierárquica ou agrupada das observações.

### Modelo linear generalizado (GLM)

O modelo linear generalizado (GLM) é uma extensão do modelo linear clássico, projetado para acomodar diferentes tipos de variáveis resposta, como variáveis contínuas, binárias ou categóricas. Além disso, o GLM flexibiliza a relação entre as variáveis explicativas e a variável resposta, permitindo que essa relação seja não-linear por meio de funções de ligação, o que amplia seu campo de aplicação para diversos contextos onde o modelo linear tradicional não é adequado.

```{r}
lm1 <- lm(nplants ~ trat, data = exp3)
summary(lm1)
```

```{r}
glm1 <- glm(nplants ~ trat, family = "gaussian",
            data = exp3)

glm2 <- glm(nplants ~ trat, family = poisson(link = "log"),
            data = exp3)
AIC(glm1)
```

```{r}
AIC(glm2)
```

```{r}
summary(glm1)
```

# **Regressão não-linear**

### Regressão não linear

Quando a relação entre a variável dependente e as variáveis independentes não pode ser representada adequadamente por uma linha reta, utiliza-se a regressão não linear. Essa abordagem é necessária quando os dados apresentam padrões curvilíneos ou complexos, exigindo modelos mais flexíveis para descrever a relação entre as variáveis de forma precisa.

### Regressão não linear para determinação de EC50

A regressão não linear é amplamente utilizada para estimar valores como a EC50 (Concentração Efetiva 50%), que representa a dose necessária para alcançar 50% do efeito máximo. Nesse caso, modelos log-logísticos ou sigmoides são frequentemente aplicados, pois descrevem bem o comportamento típico de curvas dose-resposta. Essa modelagem permite calcular com precisão o ponto de inflexão da curva, onde ocorre metade do efeito observado.

```{r}
library(tidyverse)
library(ggplot2)
library(gsheet)
library(dplyr)
dat <- gsheet2tbl("https://docs.google.com/spreadsheets/d/15pCj0zljvd-TGECe67OMt6sa21xO8BqUgv4d-kU8qi8/edit#gid=0")

options(scipen=999)
dat2 <- dat |> 
  dplyr::select(-Isolate, Population) |> 
  group_by(Code, Year, Dose) |> 
  summarise(GC_mean = mean(GC))
```

O comando `options(scipen = 999)` altera o parâmetro de exibição numérica no R, evitando que os números sejam mostrados em notação científica. Ao definir esse valor como 999, garante-se que os números sejam apresentados de forma completa, facilitando a leitura em análises e gráficos.

O bloco de comandos aplicado ao dataframe `dat` executa as seguintes etapas:

1.  Remove as colunas `"Isolate"` e `"Population"`, eliminando essas variáveis do novo conjunto de dados.

2.  Agrupa os dados restantes com base nas colunas `"Code"`, `"Year"` e `"Dose"`.

3.  Calcula a média da variável `"GC"` dentro de cada grupo formado, utilizando `summarise(GC_mean = mean(GC))`.

O resultado é um novo dataframe, chamado `dat2`, que contém a média de `GC` (`GC_mean`) para cada combinação de código, ano e dose.

Gráfico:

```{r}
FGT152 <- dat2 |>
  filter(Code == "FGT152")

FGT152 |>
  ggplot(aes(factor(Dose), GC_mean))+
  geom_point()+
  geom_line()+
  facet_wrap(~ Code)
```

## **EC50**

### Pacote `drc` e modelos de regressão dose-resposta

O pacote **`drc`** é amplamente utilizado para ajustar modelos de regressão dose-resposta, especialmente em estudos biológicos e toxicológicos. Ele oferece uma variedade de funções para modelar curvas de resposta a diferentes níveis de dose, fornecendo suporte para modelos como log-logístico, log-probit, Weibull, entre outros. Um dos principais recursos do pacote é a estimativa de valores como a **EC50** — a dose necessária para provocar 50% do efeito máximo.

### Modelo log-logístico de 3 parâmetros (LL.3)

O modelo log-logístico de três parâmetros (`LL.3`) é adequado quando se observa uma relação em forma de **curva sigmoide** (ou S) entre a dose aplicada e a resposta observada. Ele assume que a resposta aumenta (ou diminui) de forma gradual com o aumento da dose, até atingir um platô. Esse modelo estima três parâmetros:

-   **b**: a inclinação da curva (slope),

-   **d**: o valor máximo da resposta (plateau superior),

-   **e**: a dose que produz 50% da resposta máxima (**EC50**).

Esse tipo de modelo é ideal para casos em que não há resposta basal clara (ou seja, onde o valor mínimo da resposta é fixado em zero).

O comando abaixo ajusta um modelo de regressão não linear utilizando a função `drm()` do pacote `drc`, voltada para análise de curvas dose-resposta.

-   `GC_mean ~ Dose`: define que `GC_mean` é a variável resposta e `Dose` é a variável preditora.

-   `data = FGT152`: indica que os dados utilizados estão no dataframe `FGT152`.

`fct = LL.3()`: especifica o uso do modelo log-logístico de 3 parâmetros (LL.3), comumente usado para curvas com padrão sigmoide.

Após o ajuste, pode-se avaliar a qualidade do modelo por meio do AIC:

```{r}
library(drc)

drc1 <- drm(GC_mean ~ Dose, data = FGT152,
            fct = LL.3())
AIC(drc1)
```

```{r}
summary(drc1)
```

```{r}
plot(drc1)
```

```{r}
ED(drc1, 50)
```

Essa função calcula a dose correspondente ao nível de efeito desejado (neste caso, 50%).

### Modelo W1.3 (Weibull de 3 parâmetros)

O modelo W1.3 é uma alternativa ao log-logístico, oferecendo maior flexibilidade devido à inclusão de um parâmetro de assimetria (g). Esse parâmetro permite que a curva dose-resposta seja assimétrica, ajustando-se melhor a dados que não seguem o padrão sigmoide simétrico. O W1.3 é particularmente útil quando a resposta apresenta uma taxa de crescimento acelerada ou desacelerada, e seu desempenho pode ser comparado com outros modelos por meio do AIC — sendo preferido quando apresenta menor valor.

```{r}
drc1 <- drm(GC_mean ~ Dose, data = FGT152,
            fct = W1.3())
AIC(drc1)
```

```{r}
summary(drc1)
```

```{r}
plot(drc1)
```

```{r}
ED(drc1, 50)
```

### Pacote `ec50estimator`

O pacote `ec50estimator` foi desenvolvido para facilitar a estimativa da EC50 (concentração efetiva para 50% de resposta) de forma prática e direta. Ele é especialmente útil quando se deseja comparar os valores de EC50 entre diferentes grupos ou identificadores (ID), como isolados, tratamentos ou populações. Essa comparação permite identificar possíveis variações na sensibilidade ou resposta à dose entre os grupos analisados.

Além de estimar a EC50, o pacote também pode fornecer intervalos de confiança e realizar ajustes automáticos de modelos, tornando-se uma ferramenta eficiente para estudos que envolvem curvas dose-resposta.

```{r}
library(ec50estimator)

df_ec50 <- estimate_EC50(GC_mean ~ Dose,
                         data = dat2,
                         isolate_col = "Code",
                         interval = "delta",
                         fct = drc::LL.3())

df_ec50 |>
  ggplot(aes(Estimate, reorder(ID, Estimate)))+
  geom_point()+
  geom_errorbar(aes(xmin = Lower,
                    xmax = Upper), width = 0.1)+
  xlim(0,30)
```
